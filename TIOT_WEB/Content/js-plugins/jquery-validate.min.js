!function (a) { "use strict"; function b(b, c) { a("#" + c).parent(".field-item").find(".error-message").hide(), a("#" + c).removeClass("error-border"), b = a.trim(b); var f = a("#" + c).attr("data-validate"); if ("undefined" != typeof f && f !== !1) { d = a("#" + c).data("validate").split(","); for (var h = 0; h < d.length; h++) { var i = d[h]; i = i.replace(" ", ""), "" === b && "required" === i ? (a("#" + c).parent(".field-item").find(".error-message.required").fadeIn(), a("#" + c).addClass("error-border"), g.push("false")) : e[i].test(a("#" + c).val()) || "" == b ? g.push("true") : (a("#" + c).parent(".field-item").find(".error-message." + i).fadeIn(), a("#" + c).addClass("error-border"), g.push("false")) } } } var c; c = a("*[data-lang]").length >= 1 ? a("body").attr("data-lang") : "en"; var d, e = { required: /./, name: /^[A-Za-z ,'-]{1,25}$/, email: /^[A-Za-z0-9!#$%&'*+\/=?^_`{|}~-]+(\.[A-Za-z0-9!#$%&'*+\/=?^_`{|}~-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9-]+)*\.([A-Za-z]{2,})$/, zipcode: /^\d{5}(?:[-\s]\d{4})?$/, postalcode: /^[A-Za-z]\d[A-Za-z][ -]?\d[A-Za-z]\d$/, telephone: /^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}$/, password: /^[a-z0-9_-]{6,18}$/, url: /((([A-Za-z]{3,9}:(?:\/\/)?)(?:[-;:&=\+\$,\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\+\$,\w]+@)[A-Za-z0-9.-]+)((?:\/[\+~%\/.\w-_]*)?\??(?:[-\+=&;%@.\w_]*)#?(?:[\w]*))?)/, date: /^([1-9]|0[1-9]|[12][0-9]|3[01])\D([1-9]|0[1-9]|1[012])\D(19[0-9][0-9]|20[0-9][0-9])$/, year: /^(19|20)[\d]{2,2}$/, number: /^[0-9]{1,45}$/, alphabet: /^[A-z]+$/, alphanumeric: /^[a-zA-Z0-9]*$/, ipaddress: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/, hexvalue: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/ }, f = { en: { required: "This field is required", name: "A valid name is required", email: "A valid email address is required", zipcode: "A valid zip code is required", postalcode: "A valid postal code is required", telephone: "A valid phone number is required", password: "A valid password is required", url: "A valid URL is required", date: "A valid date is required", year: "A valid year is required", number: "Numbers only", alphabet: "Alphabet characters only", alphanumeric: "Alphanumeric characters only", ipaddress: "A valid IP address is required", hexvalue: "A valid HEX value is required" }, de: { required: "Dieses Feld ist obligatorisch.", name: "Eine gültige E-Mail-Adresse ist erforderlich", email: "Ein gültiger Name ist erforderlich", zipcode: "Eine gültige Postleitzahl ist erforderlich", postalcode: "Eine gültige Postleitzahl ist erforderlich", telephone: "Eine gültige Telefonnummer ist erforderlich", password: "Ein gültiges Passwort ist erforderlich", url: "Eine gültige URL ist erforderlich", date: "Ein gültiges Datum ist erforderlich", year: "Ein gültiges Jahr ist erforderlich", number: "Nur Zahlen", alphabet: "Nur Buchstaben", alphanumeric: "Nur alphanumerische Zeichen", ipaddress: "Eine gültige IP Adresse ist erforderlich", hexvalue: "Ein gültiger HEX Wert ist erforderlich" }, es: { required: "Este campo es obligatorio", name: "Se requiere una dirección de correo electrónico válida", email: "Se requiere un nombre válido", zipcode: "Se requiere un código postal válido", postalcode: "Se requiere un código postal válido", telephone: "Se requiere un número de teléfono válido", password: "Se requiere una contraseña válida", url: "Se requiere una URL válida", date: "Se requiere una fecha válida", year: "Se requiere un año válido", number: "Solo números", alphabet: "Solo caracteres alfabéticos", alphanumeric: "Solo caracteres alfanuméricos", ipaddress: "Se requiere una dirección IP válida", hexvalue: "Se requiere un valor hexadecimal válido" } }, g = new Array; a("input, select, textarea").each(function () { var b = a(this).attr("data-validate"), e = a(this).attr("id"); if ("undefined" != typeof b && b !== !1) { d = a(this).data("validate").split(","), a(this).prev("label").andSelf().wrapAll('<div class="field-item"/>'); for (var g = 0; g < d.length; g++) { var h = d[g]; h = h.replace(" ", ""); var i = e + "-" + h + "-error"; "required" === h && a("#" + e).attr("aria-required", "true"), a("#" + e).attr("aria-describedby", i); var j = f[c][h]; j = j.replace(/[\uff01-\uff5e]/g, function (a) { return String.fromCharCode(a.charCodeAt(0) - 65248) }), a("#" + e).parent(".field-item").append('<span class="error-message ' + h + '" id="' + i + '" role="alert">' + j + "</span>") } } }), a("input, select, textarea").on("blur", function () { var c = a(this).val(), d = a(this).attr("id"); b(c, d) }), a("form").submit(function (c) { g = new Array, c.preventDefault(), a("input, select, textarea").each(function () { var c = a(this).attr("data-validate"), d = a(this).attr("id"), e = a(this).val(); "undefined" != typeof c && c !== !1 && b(e, d) }), -1 !== a.inArray("false", g) ? c.preventDefault() : submitForm() }) }(jQuery);
